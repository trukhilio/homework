"use strict";var selectorFinder=function(e){return document.querySelectorAll(e)},selectorOne=function(e){return document.querySelector(e)},slide=selectorFinder(".banner__slides_item"),arr=Array.from(slide),slideShow=function(e){Array.prototype.move=function(e,t){if(t>=arr.length)for(var n=t-arr.length;n--+1;)arr.push(void 0);arr.splice(t,0,arr.splice(e,1)[0])};var t=(arr.map(function(t){return t.classList.add(e)}),function(){var t=arr.length,n=function(){return arr.map(function(e,t){return e.style.order=t})};"banner__slides_moveOne"===e&&(arr.move(0,t-1),n()),"banner__slides_moveTwo"===e&&(arr.move(t-1,0),n());arr.map(function(t){return t.classList.remove(e)})});setTimeout(function(){t()},1e3)},slideTime=setInterval(function(){return slideShow("banner__slides_moveOne")},5e3),selectLeft=selectorOne(".arrow__item_left"),selectRight=selectorOne(".arrow__item_right"),slideNext=function(e){clearInterval(slideTime),slideShow(e),slideTime=setInterval(function(){return slideShow("banner__slides_moveOne")},5e3)};selectLeft.addEventListener("click",function(){return slideNext("banner__slides_moveTwo")},!1),selectRight.addEventListener("click",function(){return slideNext("banner__slides_moveOne")},!1);var getClass=function(e){return document.querySelectorAll(e)},getClassTwo=function(e){return document.querySelector(e)},tabs=getClass(".contentTwo__tab"),tabsNum=getClass(".tabs__number"),tabsContent=getClass(".contentTwo__text"),tabOne=getClassTwo(".contentTwo__tab_one"),tabTwo=getClassTwo(".contentTwo__tab_two"),tabThree=getClassTwo(".contentTwo__tab_three"),activeFunc=function(e,t,n){Array.from(e,function(e){return e.classList.remove(t)});e[n].classList.add(t)},changerFunc=function(e){activeFunc(tabs,"contentTwo__tab_active",e),activeFunc(tabsNum,"tabs__number_active",e),activeFunc(tabsContent,"contentTwo__text_active",e)};tabOne.addEventListener("click",function(){changerFunc(0)},!1),tabTwo.addEventListener("click",function(){changerFunc(1)},!1),tabThree.addEventListener("click",function(){changerFunc(2)},!1),window.onload=function(){};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
